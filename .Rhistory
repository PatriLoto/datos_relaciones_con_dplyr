install.packages("corrplot")
library(here)
View(nycflights13::airlines)
# tabla
View(nycflights13::flights)
#tabla avión
View(nycflights13::planes)
# tabla
View(nycflights13::airports)
# tabla clima:
nycflights13::weather
airports %>% filter(faa=='EWR')
library(tidyverse)
airports %>% filter(faa=="EWR")
nycflights13::airports %>% filter(faa=="EWR")
# tabla clima:
View(nycflights13::weather)
# simple consulta
nycflights13::airports %>% filter(faa=="ATL")  #EWR: nueva york
datos
datos::vuelos
datos::aeropuertos
datos::aerolineas
datos::aviones     #
datos::aeropuertos
datos::clima
datos::vuelos
datos::aerolineas   # aerolinea/codigo_carrier(clave principal o primaria), nombre
datos::aeropuertos  # codigo_aeropuerto (clave principal o primaria), nombre, latitud, longitud, altura, zona_horaria, horario_verano, zona_horaria_americana, etc.
datos::aviones      # codigo_cola (clave principal o primaria), anio, tipo, fabricante, modelo, nro_motores, asientos, velocidad, tipo_motor
datos::clima        # origen, anio, mes, dia, hora, temperatura, punto_rocio, humedad, direccion_viento, velocidad_viento, velocidad_rafaga, precipitación, etc. Clave pricipal compuesta: origen, anio, mes, dia,hora.
datos::vuelos  #anio, mes, dia, horario_salida, codigo_carrier, vuelo, codigo_cola, origen, destino, salida_programada, atraso_salida, horario_llegada,entre otros.
aviones %>%
count(codigo_cola) %>%
filter(n > 1)
library(datos)
aviones %>%
count(codigo_cola) %>%
filter(n > 1)
aerolineas %>%
count(aerolinea) %>%
filter(n>1)
aerolineas %>%
count(aerolinea) %>%
filter(n>1)
aeropuertos %>%
count(codigo_aeropuerto)%>%
filter(n>1)
clima %>%
count(anio, mes, dia, hora, origen)%>%
filter(n>1)
clima2 <- clima %>% mutate(nro_fila= row_number())
clima2
View(clima2)
clima2 %>%
count(anio, mes, dia, hora, origen, nro_fila)%>%
filter(n>1)
vuelos %>%
count(anio, mes, dia, hora, vuelo) %>%
filter(n>1)
vuelos %>%
count(anio, mes, dia, hora, vuelo, codigo_cola) %>%
filter(n>1)
vuelos2 %>% vuelos %>% mutate(id= row_number())
vuelos2 <- vuelos %>% mutate(id= row_number())
vuelos2 %>%
count(id, anio, mes,hora, vuelo)%>%
filter(n>1)
clima2 %>%
count(anio, mes, dia, hora, origen, nro_fila)%>%
filter(n>1)
clima2 %>%
count(nro_fila)%>%
filter(n>1)
vuelos2 %>%
count(id, anio, mes, dia, hora, vuelo)%>%
filter(n>1)
vuelos2 %>%
count(id)%>%
filter(n>1)
vuelos_con_clave <- vuelos %>% mutate(id= row_number())
vuelos_con_clave %>%
count(id, anio, mes, dia, hora, vuelo)%>%
filter(n>1)
vuelos_con_clave %>%
count(id)%>%
filter(n>1)
vuelos2 <- vuelos %>%
select(anio:dia, hora, origen, destino, codigo_cola, aerolinea)
vuelos2
vuelos2 %>%
select(-origen, -destino) %>%
left_join(aerolineas, by = "aerolinea")
vuelos2 %>%
select(-origen, -destino) %>%
left_join(aerolineas, by = "aerolinea")
View(vuelos2)
vuelo_con_aerolinea <- vuelos2 %>%
select(-origen, -destino) %>%
left_join(aerolineas, by = "aerolinea")
View(vuelo_con_aerolinea)
vuelos2 %>%
select(-origen, -destino) %>%
inner_join(aerolineas, by = "aerolinea")
vuelo_con_aerolinea <- vuelos2 %>%
select(-origen, -destino) %>%
left_join(aerolineas, by = "aerolinea")
View(vuelo_con_aerolinea)
View(vuelo_con_aerolinea)
vuelos2 %>%
select(-origen, -destino) %>%
inner_join(aerolineas, by = "aerolinea")
vuelo2 %>% filter(aerolineas == 'NA')
vuelos2 %>% filter(aerolineas == 'NA')
vuelos2 %>% filter(aerolineas == 'NA')
vuelos2 %>%select(-origen, -destino)%>% filter(aerolineas == 'NA')
p <- vuelos2 %>%select(-origen, -destino)%>% filter(aerolineas == 'NA')
p <- vuelos2 %>%select(-origen, -destino)%>% filter(aerolineas == ' ')
p <- vuelos2 %>%select(-origen, -destino)%>% filter(vuelos2$aerolineas == ' ')
p <- vuelos2 %>%select(-origen, -destino)%>% filter(aerolinea == 'NA')
p
vuelos2 %>%select(-origen, -destino)%>% filter(aerolinea == 'NA')
vuelos2 %>%
select(-origen, -destino) %>%
mutate(nombre = aerolineas$nombre[match(aerolinea, aerolineas$aerolinea)])
x <- tribble(
~key, ~val_x,
1, "x1",
2, "x2",
3, "x3"
)
x <- tibble(
~key, ~val_x,
1, "x1",
2, "x2",
3, "x3"
)
x <- tibble(
~key, ~val_x,
1, "x1",
2, "x2",
3, "x3"
)
x <- tribble(
~key, ~val_x,
1, "x1",
2, "x2",
3, "x3"
)
x
y <- tribble(
~key, ~val_y,
1, "y1",
2, "y2",
4, "y3"
)
x %>% inner_join(y, key="key")
union_interna <- x %>% inner_join(y, key="key")
union_interna <- x %>% inner_join(y, key="key")
union_interna
union_izquierda<- x %>% left_join(y, key="key")
union_izquierda
union_derecha <-x %>% right_join(y, key="key")
union_derecha <-x %>% right_join(y, key="key")
union_derecha
union_completa <- x full_join(y, key="key")
union_completa <- x %>% full_join(y, key="key")
union_completa
union_natural<- vuelos2 %>%
left_join(clima)
union_natural
vuelos_con_avion <- vuelos2 %>% left_join (aviones, by="codigo_cola")
vuelos_con_avion <- vuelos2 %>% left_join (aviones, by="codigo_cola")
vuelos_con_avion
union_aeropuerto<- vuelos2 %>% left_join(aeropuertos, by=c(origen=codigo_aeropuerto))
union_aeropuerto<- vuelos2 %>% left_join(aeropuertos, by=c(origen=cod_aeropuerto))
union_aeropuerto<- vuelos2 %>% left_join(aeropuertos, by=c("origen"= "codigo_aeropuerto"))
union_aeropuerto
destinos_populares <- vuelos %>%
count(destino, sort = TRUE) %>%
head(10)
destinos_populares
destinos_populares %>% left_join (aeropuertos, by= c("destino"="codigo_aeropuerto"))
Ahora quieres encontrar cada vuelo que fue a alguno de esos destinos. Puedes construir un filtro:
vuelos %>% semi_join(destinos_populares)
vuelos %>% anti_join(aviones, by="codigo_cola")
vuelos %>%
anti_join(aviones, by = "codigo_cola") %>%
count(codigo_cola, sort = TRUE)
vuelos %>% anti_join(aviones, by="codigo_cola")
vuelos %>%
anti_join(aviones, by = "codigo_cola") %>%
count(codigo_cola, sort = TRUE)
vuelos %>% anti_join(aviones, by="codigo_cola")
vuelos %>%
anti_join(aviones, by = "codigo_cola") %>%
count(codigo_cola, sort = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(xaringan)
install.packages(xaringan)
install.packages("xaringan")
install.packages("xaringan")
library(xaringan)
library(tidyverse)
library(datos)
library(nycflights13)
library(here)
#install.packages("nycflights13")
install.packages("leaflet")
